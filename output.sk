# Skegcraft main backend
# Daniel C (danielc.dev), GPL 3.0


# Init checks
on load:
	set {_skeg1} to "skeg1"
	set {_skeg1_nether} to "skeg1_nether"
	# Normal mode skeg2
	make console execute command "mv modify set difficulty normal world"
	make console execute command "mv modify set difficulty normal world_the_end"
	make console execute command "mv modify set difficulty normal world_nether"

	# Survival skeg2
	make console execute command "mv modify set gamemode survival world"
	make console execute command "mv modify set gamemode survival world_the_end"
	make console execute command "mv modify set gamemode survival world_nether"

	# Peaceful skeg1
	make console execute command "mv modify set difficulty peaceful %{_skeg1}%"
	make console execute command "mv modify set difficulty peaceful %{_skeg1_nether}%"

	# Spectator skeg1
	make console execute command "mv modify set gamemode spectator %{_skeg1}%"
	make console execute command "mv modify set gamemode spectator %{_skeg1_nether}%"

	make console execute command "mv gamerule naturalRegeneration false %{_skeg1}%"
	make console execute command "mv gamerule naturalRegeneration false %{_skeg1_nether}%"


# Stupid whitelist, so players can spectate old worlds
function isWhitelisted(pl: player) :: boolean:
	set {_i} to 1
	loop {whitelist::*}:
		if {whitelist::%{_i}%} is {_pl}:
			# UUID checker
			if {whitelist_uuid::%{_pl}%} is set:
				if {whitelist_uuid::%{_pl}%} is not uuid of {_pl}:
					broadcast "invalid UUID, SOMEBODY MAY BE TRYING TO DO SOMETHING NASTY!!!"
					return false
			set {whitelist_uuid::%{_pl}%} to uuid of {_pl}

			return true
		set {_i} to {_i} + 1
	return false

command /whitelist_list:
	trigger:
		message "<bold>Current whitelist:"
		set {_i} to 1
		loop {whitelist::*}:
			message {whitelist::%{_i}%}
			set {_i} to {_i} + 1

command /whitelist_remove <text>:
	permission: admin
	trigger:
		remove arg-1 from {whitelist::*}
		message "Removed %arg-1%"

command /whitelist_add <text>:
	permission: admin
	trigger:
		add arg-1 to {whitelist::*}
		message "Added %arg-1%"
# Old world loading

# mvimport old
# mv load old

command /skeg1:
	usage: "Teleport to 2016-2021 Skegcraft 1 world"
	trigger:
		if player is in "world_the_end" or "world_nether":
			message "Sorry, you gotta get to the overworld first..."
		else:
			message "Type /places for a list of memorable locations in Skegcraft 1. Also, note that maps aren't working."
			teleport the player to location(216, 63, 243, world("skeg1"))

command /skeg2:
	usage: "Teleport to the Skegcraft 2 world"
	trigger:
		if isWhitelisted(player) is true:
			if player is not in "skeg1":
				message "You must be in skeg1 to teleport"
			else:
				make console execute command "mv tp %player% world"
		else:
			message "Sorry, you aren't whitelisted. Apply at skegcraft.net"


# Block out multiverse
on command:
	if command sender is not console:
		if command sender does not have permission "admin": 
			if command starts with "mv":
				cancel event

command /place <text>:
	trigger:
		if player is in "skeg1":
			if arg-1 is "spawn":
				teleport player to location(216, 63, 243, world("skeg1"))
			else if arg-1 is "inverse-island":
				teleport player to location(135, 32, 156, world("skeg1"))
			else if arg-1 is "library":
				teleport player to location(-31, 68, 35, world("skeg1"))
			else if arg-1 is "community-island":
				teleport player to location(-490, 77, 257, world("skeg1"))
			else if arg-1 is "anna-base1":
				teleport player to location(-548, 84, -88, world("skeg1"))
			else if arg-1 is "anna-base2":
				teleport player to location(-1279, 83, -3169, world("skeg1"))
			else if arg-1 is "anna-base3":
				teleport player to location(-6540, 98, -2916, world("skeg1"))
			else if arg-1 is "anna-base4":
				teleport player to location(-6640, 63, -2758, world("skeg1"))
			else if arg-1 is "anna-base5":
				teleport player to location(-7510, 63, -2770, world("skeg1"))
			else if arg-1 is "aarch-base":
				teleport player to location(-467, 68, 1134, world("skeg1"))
			else if arg-1 is "petabyte-base":
				teleport player to location(-702, 66, -857, world("skeg1"))
			else if arg-1 is "icecat-base":
				teleport player to location(-666, 70, 544, world("skeg1"))
			else if arg-1 is "icecat-secret-base":
				teleport player to location(-2007, 32, 547, world("skeg1"))
			else if arg-1 is "mott-base":
				teleport player to location(-769, 63, 449, world("skeg1"))
			else if arg-1 is "random-land":
				teleport player to location(509, 63, 3769, world("skeg1"))
			else:
				message "Invalid location"
		else:
			message "Command only for old worlds"

command /places:
	# TODO: Place command
	trigger:
		if player is in "skeg1":
			message "<yellow><b>--- Places ---"
			message "Click the link to teleport. Don't use it too quickly, it makes CPU usage go through the roof :)"
			message "<run command:/place spawn>=> Spawn"
			message "<run command:/place inverse-island>=> Inverse Island"
			message "<run command:/place library>=> Library"
			message "<run command:/place community-island>=> Community Island"
			message "<run command:/place anna-base1>=> Kilo_'s First Base"
			message "<run command:/place anna-base2>=> Kilo_'s Second Base"
			message "<run command:/place anna-base3>=> Kilo_'s Third Base"
			message "<run command:/place anna-base4>=> Kilo_'s Fourth Base"
			message "<run command:/place anna-base5>=> Kilo_'s Fifth Base"
			message "<run command:/place aarch-base>=> Aarchangel's Base"
			message "<run command:/place petabyte-base>=> Secret Petabyte Base"
			message "<run command:/place icecat-base>=> Icecat's Base"
			message "<run command:/place icecat-secret-base>=> Icecat's Secret Base"
			message "<run command:/place mott-base>=> Mott's Base"
			message "<run command:/place random-land>=> Random Land"

		else:
			message "Command only for old worlds"
# bf.sk, GPL3.0 License
# By Daniel C, petabyt.dev

# Try to parse out capitalized ASCII
function ascii(char: number) :: text:
	if {_char} >= 65:
		set {_chars::*} to "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"
		return {_chars::%{_char} - 65 + 1%}
	return "%{_char}%"

command /bf <text>:
	trigger:
		set {_limiter} to 0

		# Set up string as array
		set {_length} to the length of arg-1
		set {_code::*} to arg-1 split at ""
		set {_pc} to 1

		# Set up memory tape
		set {_mem::*} to 0
		set {_fp} to 1

		# Set up nested bracket locations
		set {_bracket::*} to 0
		set {_bp} to 1

		while {_pc} is not {_length} + 1:
			set {_char} to {_code::%{_pc}%}

			if {_char} is "+":
				set {_mem::%{_fp}%} to {_mem::%{_fp}%} + 1
			else if {_char} is "-":
				set {_mem::%{_fp}%} to {_mem::%{_fp}%} - 1
			else if {_char} is "<":
				set {_fp} to {_fp} - 1
			else if {_char} is ">":
				set {_fp} to {_fp} + 1
			else if {_char} is ".":
				set {_temp} to ascii({_mem::%{_fp}%})
				send "%{_temp}%" to player
			else if {_char} is "[":
				set {_bracket::%{_bp}%} to {_pc}
				set {_bp} to {_bp} + 1
			else if {_char} is "]":
				# Limiter to prevent crashes
				set {_limiter} to {_limiter} + 1
				if {_limiter} is 3000:
					send "Capped 3000 loop, quitting" to player
					stop trigger

				if {_bp} is 1:
					send "Error, missing start bracket"
					stop trigger

				# Jump to last called
				if {_mem::%{_fp}%} is not 0:
					set {_bp} to {_bp} - 1
					set {_pc} to {_bracket::%{_bp}%} - 1

			set {_pc} to {_pc} + 1
# Block commands with "humor"

on command:
	if command sender is not console:
		if command starts with "tp ":
			message "Nice try."
			cancel event
		else if command starts with "give":
			message "No, you may not have 64 diamond blocks."
			cancel event
		else if command starts with "kill":
			message "No. Starve."
			cancel event
		else if command starts with "clear":
			message "Looks like somebody has been using too much Unix."
			message "You're lucky you aren't the server admin, I did this once."
			cancel event
on chat:
	cancel event
	if player is "petabyt":
		broadcast "<red><Daniel><white> %message%"
	else if player is "MasterOfTheTiger":
		broadcast "<orange><%player%><white> %message%"
	else if player is "ShanShen":
		broadcast "<yellow><%player%><white> %message%"
	else if player is "Icecat3":
		broadcast "<cyan><%player%><white> %message%"
	else if player is "aarchangels":
		broadcast "<blue><%player%><white> %message%"
	else if player is "323GHS":
		broadcast "<blue><%player%><white> %message%"
	else if player is "TacticalPizza_":
		broadcast "<yellow><%player%><white> %message%"
	else if player is "kilobit_":
		broadcast "<light cyan><kilo><white> %message%"
	else if player is "SuperLuca07":
		broadcast "<green><%player%><white> %message%"
	else if player is "Cookiekitten73":
		broadcast "<purple><%player%><white> %message%"
	else if player is "vault112":
		broadcast "<green><%player%><white> %message%"
	else if player is "AntiLukewarm":
		broadcast "<red><%player%><white> %message%"
	else if player is "MagicManatee657":
		broadcast "<blue><%player%><white> %message%"
	else:
		broadcast "<%player%> %message%"
# note.sk, GPL3.0
# Copyleft Daniel C 2021

command /n <text>:
	trigger:
		message "<bold><green>%arg-1%"
		set {note::%uuid of player%} to arg-1

command /ng:
	trigger:
		message "<bold><green>%{note::%uuid of player%}%"
# Basic currency counter
# Daniel C 2021, GPL3.0

on mine of diamond_ore:
	set {diamonds} to {diamonds} + 1

on mine of deepslate_diamond_ore:
	set {diamonds} to {diamonds} + 1

on craft of netherite ingot:
	set {netherite} to {netherite} + 1

command /stats:
	trigger:
		message "<bold>Server 'economy' stats:"
		message "%{diamonds}% diamond ore blocks have been mined."
		message "%{netherite}% netherite has have been crafted."

command /help:
	trigger:
		message "<yellow><b>--- Help ---"
		message "/rules - Server rules"
		message "/about - Server info"
		message "/skeg1 - Teleport to Skegcraft 1 (2016-2021)"
		message "/skeg2 - Teleport to the latest world"
		message "/bf <text> - Execute some BrainFrick"
		message "/stats - Show server 'economy' stats"
		message "/whitelist_list - Show current survival players"
		message "/n <text> - Set a quick note"
		message "/ng - Get your quick note"

command /rules:
	trigger:
		message "<yellow><b>--- Rules ---"
		message "- You may do good, and not evil."
		message "- No senseless crap"
		message "- No vulgar crap"
		message "- No dishonesty (xray, exploits)"
		message "- No death traps"
		message "Please read https://skegcraft.net/rules.txt"

command /about:
	trigger:
		message "<yellow><b>--- About ---"
		message "This server is hosted in North Carolina."
		message "RAM: 8GB DDR3"
		message "CPU: Intel Core i5 2400"
		message "SSD: 256GB"
		message "Matrix: skegcraft:matrix.org"
		message "Site: https://skegcraft.net/"

command /plugins:
	trigger:
		message "Source code for Skegcraft: https://github.com/skegcraft/skegsk"

command /pause:
	permission: admin
	trigger:
		make console execute command "/gamerule doDaylightCycle false"
		make console execute command "/gamerule doWeatherCycle false"

command /resume:
	permission: admin
	trigger:
		make console execute command "/gamerule doDaylightCycle true"
		make console execute command "/gamerule doWeatherCycle true"

command /spawn:
	trigger:
		message "Head to 48, 68, 72"

on join:
	if isWhitelisted(player) is true:
		if player is in "skeg1" or "skeg1_nether":
			teleport the player to location(48, 68, 72, world("world"))
		set join message to "<orange>Welcome, %player% to SkegCraft!"
	else:
		if player is in "world" or "world_the_end" or "world_nether":
			teleport the player to location(216, 63, 243, world("skeg1"))
		message "Sorry, you aren't whitelisted in Skegcraft 2. You can still spectate the archived Skegcraft world."
		message "Use this form to join: https://forms.gle/guorzZ63FZ133pqu9"
		message "Type /places for a list of memorable locations in Skegcraft 1. Also, note that maps aren't working."

	loop all players:
		play sound "entity.experience_orb.pickup" with volume 1 to the player
